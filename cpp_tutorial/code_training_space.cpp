#include <iostream>
using namespace std; // Пространство имён - пока что не знаю, что это

// Динамическая и статическая память:
// Статическая память - например под массив или переменную.
// Потенциальные минусы - память может использоваться нерационально. Например при объявлении массива размером 10,
// может использоться только 1 ячейка - 9 ячеек памяти не используются, но занимают место.
// Плюсы - не требует самостоятельного освобождения памяти (delete), ответственность за использование памяти 
// не лежит на разработчике.
// 
// Динамическая память - удобно, когда заранее неизвестно, сколько памяти будет использоваться,
// могу сравнить с ArrayList в Java. Минусы - если самостоятельно не очищать память, то рано или поздно она закончится и будут проблемы.


int main()
{
    // Что такое &?  
    // Ответ: адрес переменной в памяти. (возвращает адрес переменной)
    // Что такое *?
    // Ответ: значение переменной в определённом адресе памяти. (возвращает значение переменной)
    
    int variable = 7;
    cout << variable << endl;   // переменная - 7
    cout << &variable << endl;  // оператор адреса        - 00000084B77BFBA4
    cout << *&variable << endl; // оператор разыменования - 7

    return 0;
}


// Что такое указатели и с чем их едят?
// Как же у меня окостенел мозг, я вообще не могу учиться самостоятельно.
// Постоянно отвлекаюсь, думаю не о том.
// Продолжим.

// Указатели - переменная, значение которой является адрес ячейки в памяти. (например, 003AFCD4)
